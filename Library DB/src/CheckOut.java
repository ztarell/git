
import java.sql.Array;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Warren
 */
public class CheckOut extends javax.swing.JFrame {
    
    private final String url = "jdbc:postgresql://localhost:5434/postgres";
    private final String user = "zpillman";
    private final String password = "password";
    
    public Connection connect() throws SQLException {
        return DriverManager.getConnection(url, user, password);
    }

    /**
     * Creates new form CheckOut
     */
    public CheckOut() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        CheckOut_TextBox = new javax.swing.JTextField();
        CheckOut_Ok = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Check Out Search");
        setBounds(new java.awt.Rectangle(500, 100, 500, 500));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Please input book isbn, book title, or book author");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(69, 46, 0, 44);
        getContentPane().add(jLabel1, gridBagConstraints);

        CheckOut_TextBox.setPreferredSize(new java.awt.Dimension(250, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 244;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 46, 0, 0);
        getContentPane().add(CheckOut_TextBox, gridBagConstraints);

        CheckOut_Ok.setText("Ok");
        CheckOut_Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckOut_OkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 15, 119, 44);
        getContentPane().add(CheckOut_Ok, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CheckOut_OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckOut_OkActionPerformed
        String userInput = CheckOut_TextBox.getText();
        List<Book> bookList = searchBooksTerm(userInput);

        //make error window
        if(bookList.isEmpty()) {
            JOptionPane.showMessageDialog(null,
                "Error, no books found matching that term",
                "No Books Found",
                JOptionPane.ERROR_MESSAGE);
            dispose();
            return;
        }

        CheckOutResults cor = new CheckOutResults(bookList);
        cor.setVisible(true);
        dispose();
    }//GEN-LAST:event_CheckOut_OkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        System.out.println("Test");


        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            System.out.println("After For Loop");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOut().setVisible(true);
            }
        });
    }
    
    public List<Book> searchBooksTerm(String term) {
        //append wildcards to search term
        term = "%" + term + "%";
        String SQL = "SELECT DISTINCT Book.isbn, Isbns.isbn13, Book.title, Authors.name "
            + "FROM Book "
            + "JOIN Isbns ON Isbns.isbn = Book.isbn "
            + "JOIN Book_Authors ON Book.isbn = Book_Authors.isbn "
            + "JOIN Authors ON Book_Authors.author_id = Authors.author_id "
            + "WHERE (? ILIKE ANY(Authors.name) "
            + "OR Book.isbn ILIKE ? "
            + "OR Book.title ILIKE ? "
            + "OR Isbns.isbn13 ILIKE ? ) "
            + "AND NOT Book.is_checked_out";

        List<Book> booksList = new ArrayList<Book>();

        try (Connection conn = connect(); PreparedStatement pstmt = conn.prepareStatement(SQL)) {
            pstmt.setString(1, term);
            pstmt.setString(2, term);
            pstmt.setString(3, term);
            pstmt.setString(4, term);

            ResultSet rs = pstmt.executeQuery();

            while(rs.next()) {
                Book book = new Book();
                Author author = new Author();
                book.setIsbn(rs.getString("isbn"));
                book.setIsbn13(rs.getString("isbn13"));
                book.setTitle(rs.getString("title"));

                Array nameArray = rs.getArray("name");
                String[] name = (String[])nameArray.getArray();
                author.setNames(name);

                book.setAuthor(author);
                booksList.add(book);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        return booksList;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CheckOut_Ok;
    private javax.swing.JTextField CheckOut_TextBox;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
